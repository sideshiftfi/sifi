/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  UniversalRouter,
  UniversalRouterInterface,
  RouterParametersStruct,
} from "../../contracts/UniversalRouter";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "uniswapV2Router",
            type: "address",
          },
          {
            internalType: "address",
            name: "sushiswapRouter",
            type: "address",
          },
          {
            internalType: "address",
            name: "uniswapV3Router",
            type: "address",
          },
          {
            internalType: "address",
            name: "curveRouter",
            type: "address",
          },
          {
            internalType: "address",
            name: "balancerRouter",
            type: "address",
          },
          {
            internalType: "address",
            name: "bancorRouter",
            type: "address",
          },
          {
            internalType: "address",
            name: "routerCollector",
            type: "address",
          },
        ],
        internalType: "struct RouterParameters",
        name: "params",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DeadlinePassed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes1",
        name: "command",
        type: "bytes1",
      },
      {
        internalType: "uint256",
        name: "commandNum",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "output",
        type: "bytes",
      },
    ],
    name: "FailedCommand",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInputLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "commands",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "inputs",
        type: "bytes[]",
      },
    ],
    name: "multiExecute",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "commands",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "inputs",
        type: "bytes[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "routeExecute",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes1",
        name: "command",
        type: "bytes1",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "singleExecute",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "";

type UniversalRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniversalRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniversalRouter__factory extends ContractFactory {
  constructor(...args: UniversalRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    params: RouterParametersStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniversalRouter> {
    return super.deploy(params, overrides || {}) as Promise<UniversalRouter>;
  }
  override getDeployTransaction(
    params: RouterParametersStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(params, overrides || {});
  }
  override attach(address: string): UniversalRouter {
    return super.attach(address) as UniversalRouter;
  }
  override connect(signer: Signer): UniversalRouter__factory {
    return super.connect(signer) as UniversalRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniversalRouterInterface {
    return new utils.Interface(_abi) as UniversalRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniversalRouter {
    return new Contract(address, _abi, signerOrProvider) as UniversalRouter;
  }
}
