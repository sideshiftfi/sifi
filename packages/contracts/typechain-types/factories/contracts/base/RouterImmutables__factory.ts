/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RouterImmutables,
  RouterImmutablesInterface,
  RouterParametersStruct,
} from "../../../contracts/base/RouterImmutables";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "uniswapV2Router",
            type: "address",
          },
          {
            internalType: "address",
            name: "sushiswapRouter",
            type: "address",
          },
          {
            internalType: "address",
            name: "uniswapV3Router",
            type: "address",
          },
          {
            internalType: "address",
            name: "curveRouter",
            type: "address",
          },
          {
            internalType: "address",
            name: "balancerRouter",
            type: "address",
          },
          {
            internalType: "address",
            name: "bancorRouter",
            type: "address",
          },
          {
            internalType: "address",
            name: "routerCollector",
            type: "address",
          },
        ],
        internalType: "struct RouterParameters",
        name: "params",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
] as const;

const _bytecode =
  "0x61016060405234801561001157600080fd5b5060405161042538038061042583398181016040528101906100339190610376565b806000015173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050806020015173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050806040015173ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050806060015173ffffffffffffffffffffffffffffffffffffffff1660e08173ffffffffffffffffffffffffffffffffffffffff1681525050806080015173ffffffffffffffffffffffffffffffffffffffff166101008173ffffffffffffffffffffffffffffffffffffffff16815250508060a0015173ffffffffffffffffffffffffffffffffffffffff166101208173ffffffffffffffffffffffffffffffffffffffff16815250508060c0015173ffffffffffffffffffffffffffffffffffffffff166101408173ffffffffffffffffffffffffffffffffffffffff1681525050506103a3565b6000604051905090565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610221826101d8565b810181811067ffffffffffffffff821117156102405761023f6101e9565b5b80604052505050565b60006102536101c4565b905061025f8282610218565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061028f82610264565b9050919050565b61029f81610284565b81146102aa57600080fd5b50565b6000815190506102bc81610296565b92915050565b600060e082840312156102d8576102d76101d3565b5b6102e260e0610249565b905060006102f2848285016102ad565b6000830152506020610306848285016102ad565b602083015250604061031a848285016102ad565b604083015250606061032e848285016102ad565b6060830152506080610342848285016102ad565b60808301525060a0610356848285016102ad565b60a08301525060c061036a848285016102ad565b60c08301525092915050565b600060e0828403121561038c5761038b6101ce565b5b600061039a848285016102c2565b91505092915050565b60805160a05160c05160e051610100516101205161014051603f6103e660003960005050600050506000505060005050600050506000505060005050603f6000f3fe6080604052600080fdfea26469706673582212208ff21b9d19822b461808301c4a8bfd487fb74b5fdb785f1eafffef16ec728bd264736f6c63430008110033";

type RouterImmutablesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RouterImmutablesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RouterImmutables__factory extends ContractFactory {
  constructor(...args: RouterImmutablesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    params: RouterParametersStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RouterImmutables> {
    return super.deploy(params, overrides || {}) as Promise<RouterImmutables>;
  }
  override getDeployTransaction(
    params: RouterParametersStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(params, overrides || {});
  }
  override attach(address: string): RouterImmutables {
    return super.attach(address) as RouterImmutables;
  }
  override connect(signer: Signer): RouterImmutables__factory {
    return super.connect(signer) as RouterImmutables__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RouterImmutablesInterface {
    return new utils.Interface(_abi) as RouterImmutablesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RouterImmutables {
    return new Contract(address, _abi, signerOrProvider) as RouterImmutables;
  }
}
