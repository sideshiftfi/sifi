/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IUniversalRouter,
  IUniversalRouterInterface,
} from "../../../contracts/interfaces/IUniversalRouter";

const _abi = [
  {
    inputs: [],
    name: "DeadlinePassed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes1",
        name: "command",
        type: "bytes1",
      },
      {
        internalType: "uint256",
        name: "commandNum",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "output",
        type: "bytes",
      },
    ],
    name: "FailedCommand",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInputLength",
    type: "error",
  },
] as const;

export class IUniversalRouter__factory {
  static readonly abi = _abi;
  static createInterface(): IUniversalRouterInterface {
    return new utils.Interface(_abi) as IUniversalRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IUniversalRouter {
    return new Contract(address, _abi, signerOrProvider) as IUniversalRouter;
  }
}
